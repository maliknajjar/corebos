<?php
/*************************************************************************************************
 * Copyright 2022 JPL TSolucio, S.L. -- This file is a part of TSOLUCIO coreBOS Customizations.
 * Licensed under the vtiger CRM Public License Version 1.1 (the "License"); you may not use this
 * file except in compliance with the License. You can redistribute it and/or modify it
 * under the terms of the License. JPL TSolucio, S.L. reserves all rights not expressly
 * granted by the License. coreBOS distributed by JPL TSolucio S.L. is distributed in
 * the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. Unless required by
 * applicable law or agreed to in writing, software distributed under the License is
 * distributed on an "AS IS" BASIS, WITHOUT ANY WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing
 * permissions and limitations under the License. You may obtain a copy of the License
 * at <http://corebos.org/documentation/doku.php?id=en:devel:vpl11>
 *************************************************************************************************/

include_once 'include/utils/utils.php';
include_once 'include/database/ClickHouseDatabase.php';

$cbmq = coreBOS_MQTM::getInstance();

while ($msg = $cbmq->getMessage('companydata', 'logalldata', 'logall')) {
	$msginfo  = json_decode($msg['information'], true);
	// sending the data to the CHDB
	$sql = $cdb->convert2Sql("INSERT INTO companydata (id, module, record_id, cbuuid, operation, userid, doneon, donefrom, application, data) VALUES (generateUUIDv4(),?,?,?,?,?,?,?,?,?);", [
		$msginfo['module'],
		$msginfo['record_id'],
		$msginfo['cbuuid'],
		$msginfo['operation'],
		$msginfo['userid'],
		$msginfo['doneon'],
		$msginfo['donefrom'],
		$msginfo['application'],
		json_encode($msginfo['data']),
	]);
	$cdb->write($sql);
}

while ($msg = $cbmq->getMessage('companydatachange', 'logalldata', 'logall')) {
	$msginfo  = json_decode($msg['information'], true);
	// sending the data to the CHDB
	$sql = $cdb->convert2Sql("INSERT INTO companydatachange (id, module, record_id, cbuuid, operation, userid, doneon, donefrom, application, data) VALUES (generateUUIDv4(),?,?,?,?,?,?,?,?,?);", [
		$msginfo['module'],
		$msginfo['record_id'],
		$msginfo['cbuuid'],
		$msginfo['operation'],
		$msginfo['userid'],
		$msginfo['doneon'],
		$msginfo['donefrom'],
		$msginfo['application'],
		json_encode($msginfo['data']),
	]);
	$cdb->write($sql);
}

while ($msg = $cbmq->getMessage('workflowdata', 'logalldata', 'logall')) {
	$msginfo  = json_decode($msg['information'], true);
	// sending the data to the CHDB
	$sql = $cdb->convert2Sql("INSERT INTO workflowdata (id, formatReferenceValues, WorkflowID, WorkflowEvent, WorkflowContext, moduleName, recordid, user, isqueue, data) VALUES (generateUUIDv4(),?,?,?,?,?,?,?,?,?);", [
		$msginfo['formatReferenceValues'],
		$msginfo['WorkflowID'],
		$msginfo['WorkflowEvent'],
		json_encode($msginfo['WorkflowContext']),
		$msginfo['moduleName'],
		$msginfo['id'],
		json_encode($msginfo['user']),
		$msginfo['isqueue'],
		json_encode($msginfo['data']),
	]);
	$cdb->write($sql);
}